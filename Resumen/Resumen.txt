Optimización de imágenes 
Las imágenes que usamos deben ser acorde a nuestro proyecto, el peso optimo en una imagen es de 70kb. como podemos optimizar estas imágenes?
 
Tiny PNG: con esta herramienta comprimimos la imagen y no reduce su calidad 

Verexift: elimina los metadatos de la imagen (Funciona muy bien con fotografías que provengan de una camara o celular)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
etiquetas de imagen

Debemos almacenar las imágenes que vamos a utilizar en una carpeta para poder tenerlas en un solo lugar 

<img src=“ubicación de la imagen” alt=“descripción de la imagen”>

<figure>
          <img
            src=“ubicación de la imagen”
            alt=“descripción de la imagen (sera mostrada cuando la imagen no carga)”
          />
          <figcaption>Descripcion de la imagen que se muestra en el pie de la imagen</figcaption>  
</figure>


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
etiquetas de video
<video src="ubicacion del video" controls preload="auto"></video>

si agregamos #t="en que segundo iniciamos a reproducir el video","en que segundo queremos que se detenga"
**ejemplo: <video src="ubicacion del video#t=10,60" controls preload="auto"></video>

controls: agrega al video los controles necesarios para reproducir, pausar y adelantar.

preload = auto: hace que el navegador descargue el video, en el momento en el que se acceda a la página.


<video controls preload="auto">
<sourse src="ubicacion del video.mp4"/>
<sourse src="ubicacion del video.m4v"/>
</video>

Si agregamos la ruta en una etiqueta source, podemos colocar varias rutas, las cuales se 
diferenciaran por su formato y el buscador se encargara de seleccionar cual video se reproducira
(solo se reproducira un video ya que el navegador elegira el que mejor entienda)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Listas
para crear una lista podemos usar dos etiqeutas, dependiendo el tipo de lista que sedeamos (lista ordenada o lista desordenada) 
las etiquetas <ul></ul> para crear una lista desordenada(sus items usaran viñetas) y <ol></ol> se utilizan para una 
lista ordenada(sus items se numeraran). Para agregar Items a las listas (cualquiera de las dos) utilizamos la etiqueta <li>Item</li>

Ejemplo de lista ordenada
<h2>Frutas</h2>
        <ol>
            <li>Pera</li>
            <li>Manzana</li>
            <li>Fresa</li>
        </ol>

Ejemplo lista desordenada
<h2>Mascotas</h2>
        <ul>
            <li>Perro</li>
            <li>Gato</li>
            <li>Tigre</li>
        </ul>

Ejemlo lista combinada
  <h1>Mi lista</h1>
    <ul>
        <li>Frutas</li>
        <ol>
            <li>Pera</li>
            <li>Manzana</li>
            <li>Fresa</li>
        </ol>
        <li>Casnes</li>
        <ol>
            <li><a href="https://www.directoalpaladar.com/recetario/71-mejores-recetas-pollo">Pollo</a></li>
            <li>Res</li>
            <li>Cerdo</li>
        </ol>
        <li>Verduras</li>
        <ol>
            <li>Cebolla</li>
            <li>Lechuga</li>
            <li>Repollo</li>
        </ol>
    </ul>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Formularios
El uso de calendarios es algo de nuestro dia a dia asi que debemos aprender a hacer los formularios mas adecuados a nuestras necesidades
a continuacion veremos la estructura de un formulario (solo usaremos algunos de los tipos de datos pero existen muchos mas)

<form action=""> 
            <label for="nombre">
                <span>Ingresa tu nombre: </span>
                <input type="text" id="nombre" placeholder="Tu nombre">
            </label>

            <label for="fechaNac">
                <span>Fecha de Nacimiento: </span>
                <input type="date" id="fechaNac">
            </label>
            
            <label for="hora">
                <span>Horario de estudio: </span>
                <input type="time" id="hora">
            </label>
</form>


form: etiqueta de inicio del formulario
label: definicion de un campo en el formulario
      for: nombre del campo
      placeholder: indica un texto de ejemplo que se eliminara al ingresar en nuestro
span:texto que nos indica que debemos ingresar en el campo (si damos clic sobre este texto, nos llevara al campo que debemos diligenciar)
input: etiqueta que define la entrada del dato. con sus atributos podemos definir el tipo y el nombre que usara dentro del proyecto 
      type: define el tipo de dato que se ingresara en el campo 
      id: indica el nombre que va a tomar dicho campo y este sirve para enlazarlo con el nombre del lebel 



Adicional a esto, podemos ayudarnos de nuestro navegador al utilizar un atributo que nos ayuda a autorrellenar los campos que ya han sido usados y 
almacenados en nuestro navegador (autocomplete="nombre campo")

Tambie podemos validar que nuestros campos siempre tengan un contenido con el atributo required

Ejemlo

<form action=""> 
            <label for="nombre">
                <span>Ingresa tu nombre: </span>
                <input type="text" id="nombre" name="nombre" placeholder="Tu nombre" autocomplete="name" required>
            </label>

            <label for="correo">
                <span>Correo: </span>
                <input type="email" id="correo" name="correo" placeholder="Tu correo" autocomplete="email" required>
            </label>
            
            <label for="pais">
                <span>Ingresa tu pais de origen: </span>
                <input type="text" id="pais" name="pais" placeholder="Tu pais de origen" autocomplete="country" required>
            </label>

            <label for="cp">
                <span>Codigo Postal: </span>
                <input type="text" id="cp" name="cp" placeholder="Tu codigo postal" autocomplete="postal-code" required>
            </label>
            
            
</form>



Por ultimo vamos a ver un tipo de input llamado selec el cual nos despliega una lista de seleccion como opcion
ejemplo selec

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Boton VS <input type="submit">

En si la funcionalidad es la misma, inclusibe si queremos usar un boton dentro de un formulario lo podeos hacer siempre y 
cuando le agreguemos el tipo submit. Aunque la etiqueta de boton es mas manejable ya que la podemos modificar mas en su componente grafico 

ejemplo de boton 
<button>Enviar</button> 

El texto que esta en el centro lo podemos modificar para hacerlo coincidir con el contexto que estamos manejando
<button type="submit">Finalizar</button> . En este caso lo podriamos usar dentro de un formulario para enviar la 
informacion y aparte le cambiamos el texto visible de la etiqueta

<input type="submit" value="Finalizar">.  De esta forma puedo cambiar el texto a la etiqueta input


///////////////////////////////////////////////////////////////////////////////////////////////////////
Estilos CSS

Para hacer uso de los estilos CSS, debemos crear una clase estilos.css en la cual vamos a definir cada uno de ellos

para llamar nuestra clase de estilos, usamos la etiqueta <link rel="stylesheet" href="ubicacion del archivo.css"> en el head de la pagina


Para hacer una modificasion en el estilo de una pagina, lo podemos hacer de la siguiente forma

Ejemplo con id

Estructura
#id {
    Estilos
}

Ejemplo
#texto{
    color: blueviolet;
    font-size: 30px;
}

Ejemplo con class

Estructura
.clas {
    Estilos
}

Ejemplo
.texto{
    color: blueviolet;
    font-size: 30px;
}


Ejemplo con cetiquetas

Estructura
etiqueta {
    Estilos
}

Ejemplo
p{
    color: blueviolet;
    font-size: 30px;
}


//////////////////////////////////////////////////////////////////////////////////////////
pseudo clases y pseudo elementos

Pseudo Clases: Una pseudoclase CSS es una palabra clave que se añade a los selectores y que 
especifica un estado especial del elemento seleccionado. Por ejemplo, :hover aplicará un estilo 
cuando el usuario haga hover sobre el elemento especificado por el selector.

Estructura
etiqueta:pseudoclase {
    Estilos
}

Ejemplo
a:hover{
    color: blueviolet;
    font-size: 30px;
}

Pseudo Elementos: Al igual que las Pseudo-classes, los pseudo-elementos se añaden a los 
selectores, pero en cambio, no describen un estado especial sino que, permiten añadir estilos 
a una parte concreta del documento. Por ejemplo, el pseudoelemento ::first-line selecciona solo 
la primera línea del elemento especificado por el selector.

Estructura
etiqueta::pseudoelemento {
    propiedad:valor;
}

Ejemplo
a::after{
    contend:"que deseamos afregar despes del contenido actual";
}
